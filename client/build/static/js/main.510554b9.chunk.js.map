{"version":3,"sources":["utils/auth.js","utils/localStorage.js","utils/mutations.js","pages/SearchBooks.js","utils/API.js","utils/queries.js","pages/SavedBooks.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","App.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","saveBookIds","bookIdArr","length","JSON","stringify","removeBookId","bookId","savedBookIds","parse","updatedSavedBookIds","filter","savedBookId","LOGIN_USER","gql","ADD_USER","SAVE_BOOK","REMOVE_BOOK","SearchBooks","useState","searchedBooks","setSearchedBooks","searchInput","setSearchInput","setSavedBookIds","useEffect","useMutation","saveBook","error","handleFormSubmit","event","preventDefault","fetch","response","ok","Error","json","items","bookData","map","book","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","console","handleSaveBook","bookToSave","find","Auth","loggedIn","variables","input","Jumbotron","fluid","className","Container","Form","onSubmit","Row","Col","xs","md","Control","name","value","onChange","e","target","type","size","placeholder","Button","variant","CardColumns","Card","key","border","Img","src","alt","Body","Title","Text","disabled","some","onClick","GET_ME","SavedBooks","useQuery","loading","data","userData","me","removeBook","handleDeleteBook","savedBooks","SignupForm","username","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","addUser","handleInputChange","currentTarget","checkValidity","stopPropagation","login","noValidate","Alert","dismissible","onClose","show","Group","Label","htmlFor","required","Feedback","LoginForm","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","logout","Modal","onHide","aria-labelledby","Tab","defaultActiveKey","Header","closeButton","Item","eventKey","Content","Pane","handleModalClose","client","ApolloClient","request","operation","setContext","headers","authorization","uri","App","ApolloProvider","exact","path","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.510554b9.chunk.js","sourcesContent":["// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","export const getSavedBookIds = () => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : [];\n\n  return savedBookIds;\n};\n\nexport const saveBookIds = (bookIdArr) => {\n  if (bookIdArr.length) {\n    localStorage.setItem('saved_books', JSON.stringify(bookIdArr));\n  } else {\n    localStorage.removeItem('saved_books');\n  }\n};\n\nexport const removeBookId = (bookId) => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : null;\n\n  if (!savedBookIds) {\n    return false;\n  }\n\n  const updatedSavedBookIds = savedBookIds?.filter((savedBookId) => savedBookId !== bookId);\n  localStorage.setItem('saved_books', JSON.stringify(updatedSavedBookIds));\n\n  return true;\n};\n","import gql from \"graphql-tag\";\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $password: String!, $email: String!) {\n    addUser(username: $username, password: $password, email: $email) {\n      token\n      user {\n        username\n        _id\n        email\n      }\n    }\n  }\n`;\n\nexport const SAVE_BOOK = gql`\n  mutation saveBook($input: SavedBookInput) {\n    saveBook(input: $input) {\n      username\n      _id\n      bookCount\n      savedBooks {\n        bookId\n        authors\n        image\n        link\n        title\n        description\n      }\n    }\n  }\n`;\n\nexport const REMOVE_BOOK = gql`\n  mutation removeBook($bookId: String!) {\n    removeBook(bookId: $bookId) {\n      _id\n      username\n      bookCount\n      savedBooks {\n        bookId\n        authors\n        image\n        link\n        title\n        description\n      }\n    }\n  }\n`;","import React, { useState, useEffect } from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  Col,\n  Form,\n  Button,\n  Card,\n  CardColumns,\n} from \"react-bootstrap\";\n\nimport Auth from \"../utils/auth\";\nimport { searchGoogleBooks } from \"../utils/API\";\nimport { saveBookIds, getSavedBookIds } from \"../utils/localStorage\";\nimport { SAVE_BOOK } from \"../utils/mutations\";\nimport { useMutation } from \"@apollo/react-hooks\";\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n  \n    return () => {\n      saveBookIds(savedBookIds);\n    \n    };\n  });\n\n  const [saveBook, { error }] = useMutation(SAVE_BOOK);\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || [\"No author to display\"],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || \"\",\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput(\"\");\n    } catch (err) {\n      console.error(error);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await saveBook({\n        variables: {\n          input: bookToSave,\n        },\n      });\n\n      if (!response) {\n        throw new Error(\"something went wrong!\");\n      }\n\n      \n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name=\"searchInput\"\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  size=\"lg\"\n                  placeholder=\"Search for a book\"\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type=\"submit\" variant=\"success\" size=\"lg\">\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : \"Search for a book to begin\"}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some(\n                        (savedBookId) => savedBookId === book.bookId\n                      )}\n                      className=\"btn-block btn-info\"\n                      onClick={() => handleSaveBook(book.bookId)}\n                    >\n                      {savedBookIds?.some(\n                        (savedBookId) => savedBookId === book.bookId\n                      )\n                        ? \"This book has already been saved!\"\n                        : \"Save this Book!\"}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;","\n\n// make a search to google books api\n// https://www.googleapis.com/books/v1/volumes?q=harry+potter\nexport const searchGoogleBooks = (query) => {\n  return fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n};\n","import gql from \"graphql-tag\";\n\nexport const GET_ME = gql`\n  {\n    me {\n      _id\n      username\n      email\n      savedBooks {\n        title\n        bookId\n        authors\n        description\n        image\n        link\n      }\n    }\n  }\n`;","import React from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  CardColumns,\n  Card,\n  Button,\n} from \"react-bootstrap\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\n\nimport Auth from \"../utils/auth\";\nimport { removeBookId, saveBookIds } from \"../utils/localStorage\";\nimport { GET_ME } from \"../utils/queries\";\nimport { REMOVE_BOOK } from \"../utils/mutations\";\n\nconst SavedBooks = () => {\n  const { loading, data } = useQuery(GET_ME);\n  const userData = data?.me || [];\n\n  const [removeBook, { error }] = useMutation(REMOVE_BOOK);\n\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      return false;\n    }\n    try {\n      const response = await removeBook({\n        variables: { bookId: bookId },\n      });\n\n      if (!response) {\n        throw new Error(\"something went wrong!\");\n      }\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(error);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  // sync localStorage with what was returned from the userData query\n  const savedBookIds = userData.savedBooks.map((book) => book.bookId);\n  saveBookIds(savedBookIds);\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${\n                userData.savedBooks.length === 1 ? \"book\" : \"books\"\n              }:`\n            : \"You have no saved books!\"}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button\n                    className=\"btn-block btn-danger\"\n                    onClick={() => handleDeleteBook(book.bookId)}\n                  >\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;","import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation } from \"@apollo/react-hooks\";\n\nimport { ADD_USER } from \"../utils/mutations\";\nimport Auth from '../utils/auth';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [addUser, {error}] = useMutation(ADD_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await addUser({\n        variables: { ...userFormData},\n      });\n      Auth.login(data.addUser.token);\n    } catch (err) {\n      console.error(error);\n      setShowAlert(true);\n    }\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport { LOGIN_USER } from \"../utils/mutations\"\nimport Auth from '../utils/auth';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [login, {error }]= useMutation(LOGIN_USER);\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data} = await login({\n        variables: { ...userFormData},\n      });\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(error);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from './SignupForm';\nimport LoginForm from './LoginForm';\n\nimport Auth from '../utils/auth';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            Google Books Search\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar'>\n            <Nav className='ml-auto'>\n              <Nav.Link as={Link} to='/'>\n                Search For Books\n              </Nav.Link>\n              {/* if user is logged in show saved books and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to='/saved'>\n                    See Your Books\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\n\nimport SearchBooks from \"./pages/SearchBooks\";\nimport SavedBooks from \"./pages/SavedBooks\";\nimport Navbar from \"./components/Navbar\";\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem(\"id_token\");\n\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : \"\",\n      },\n    });\n  },\n  uri: \"/graphql\",\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={SearchBooks} />\n            <Route exact path=\"/saved\" component={SavedBooks} />\n            <Route render={() => <h1 className=\"display-2\">Wrong page!</h1>} />\n          </Switch>\n        </>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}